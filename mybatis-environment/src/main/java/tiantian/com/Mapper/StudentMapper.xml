<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tiantian.com.Mapper.StudentMapper">
<!--    查询方式一：子查询-->
<!--<select id="getStudent" resultMap="StudentTeacher">-->
<!--    select * from student-->
<!--</select>-->
<!--    <resultMap id="StudentTeacher" type="tiantian.com.pojo.Student">-->
<!--        <result property="id" column="id"></result>-->
<!--        <result property="name" column="name" ></result>-->
<!--    复杂的属性：我们需要单独处理，因为result 只能处理单个字段   对象：association  集合：collection-->

<!--        <association property="teacher" column="tid" javaType="tiantian.com.pojo.Teacher" select="getTeacher"></association>-->
<!--    </resultMap>-->
<!--    #{id}值比较随意，从上面关联的assocation 查出tid，然后跟传给下方的getTeacher里的id"-->
<!--    <select id="getTeacher" resultType="tiantian.com.pojo.Teacher">-->
<!--        select * from teacher where id=#{id};-->
<!--    </select>-->

<!--查询方式2 ：按照结果嵌套查询-->
<select id="getStudent2" resultMap="StudentTeacher2">
    select s.id sid ,s.name sname,t.name tname from student s,teacher t
where s.tid=t.id
</select>
<!--    上面的SQL语句已经给数据库字段该名了，所以现在变成了sid,sname-->
    <resultMap id="StudentTeacher2" type="tiantian.com.pojo.Student">
        <result property="id" column="sid"></result>
        <result property="name" column="sname"></result>
<!-- Student类中最后一个属性tid是   复杂属性：property属性是teacher，返回的结果是Teacher-->
      <association property="teacher" javaType="tiantian.com.pojo.Teacher">
<!--  结果查出来之后，开始处理老师，老师是一个复杂类型        -->
          <result property="name" column="tname"></result>
      </association>
    </resultMap>
    <select id="getTeacher" resultType="tiantian.com.pojo.Teacher">
        select *from teacher
    </select>
</mapper>